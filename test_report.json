{
  "timestamp": "2025-10-10T10:26:03.951423",
  "base_url": "https://word-mcp-connector.ashywater-9eb5a210.francecentral.azurecontainerapps.io",
  "total": 67,
  "success": 27,
  "failed": 40,
  "avg_response_time": 0.09,
  "results": [
    {
      "path": "/create/document",
      "method": "POST",
      "summary": "Create a new Word document with optional metadata.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.12,
      "message": "✅ Success (254 chars)"
    },
    {
      "path": "/copy/document",
      "method": "POST",
      "summary": "Create a copy of a Word document.",
      "success": false,
      "status": "400",
      "response_time": 0.07,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/get/document/info",
      "method": "POST",
      "summary": "Get information about a Word document.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.12,
      "message": "✅ Success (499 chars)"
    },
    {
      "path": "/get/document/text",
      "method": "POST",
      "summary": "Extract all text from a Word document.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.11,
      "message": "✅ Success (0 chars)"
    },
    {
      "path": "/get/document/outline",
      "method": "POST",
      "summary": "Get the structure of a Word document.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.13,
      "message": "✅ Success (38 chars)"
    },
    {
      "path": "/list/available/documents",
      "method": "GET",
      "summary": "List all .docx files in the specified directory.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.15,
      "message": "✅ Success (2613 chars)"
    },
    {
      "path": "/debug/storage",
      "method": "GET",
      "summary": "Debug storage configuration and show available documents.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.09,
      "message": "✅ Success (1290 chars)"
    },
    {
      "path": "/check/document/exists",
      "method": "POST",
      "summary": "Check if a document exists in storage with detailed diagnostics.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.18,
      "message": "✅ Success (2781 chars)"
    },
    {
      "path": "/get/document/xml",
      "method": "GET",
      "summary": "Get the raw XML structure of a Word document.",
      "success": false,
      "status": "500",
      "response_time": 0.07,
      "message": "❌ {\"detail\":\"400: Function get_document_xml requires parameters. Use POST instead.\"}"
    },
    {
      "path": "/cleanup/expired/documents",
      "method": "POST",
      "summary": "Clean up expired documents from storage (TTL cleanup).",
      "success": false,
      "status": "400",
      "response_time": 0.08,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/download/document",
      "method": "POST",
      "summary": "Get download URL for a document.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.1,
      "message": "✅ Success (223 chars)"
    },
    {
      "path": "/insert/header/near/text",
      "method": "POST",
      "summary": "Insert a header (with specified style) before or after the target paragraph. Specify by text or paragraph index. Args: filename (str), target_text (str, optional), header_title (str), position ('before' or 'after'), header_style (str, default 'Heading 1'), target_paragraph_index (int, optional).",
      "success": false,
      "status": "400",
      "response_time": 0.07,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/insert/line/or/paragraph/near/text",
      "method": "POST",
      "summary": "Insert a new line or paragraph (with specified or matched style) before or after the target paragraph. Specify by text or paragraph index. Args: filename (str), target_text (str, optional), line_text (str), position ('before' or 'after'), line_style (str, optional), target_paragraph_index (int, optional).",
      "success": false,
      "status": "400",
      "response_time": 0.07,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/insert/numbered/list/near/text",
      "method": "GET",
      "summary": "Insert a numbered list before or after the target paragraph. Specify by text or paragraph index. Args: filename (str), target_text (str, optional), list_items (list of str), position ('before' or 'after'), target_paragraph_index (int, optional).",
      "success": false,
      "status": "500",
      "response_time": 0.08,
      "message": "❌ {\"detail\":\"400: Function insert_numbered_list_near_text requires parameters. Use POST instead.\"}"
    },
    {
      "path": "/add/paragraph",
      "method": "POST",
      "summary": "Add a paragraph to a Word document.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.13,
      "message": "✅ Success (230 chars)"
    },
    {
      "path": "/add/heading",
      "method": "POST",
      "summary": "Add a heading to a Word document.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.13,
      "message": "✅ Success (255 chars)"
    },
    {
      "path": "/add/picture",
      "method": "POST",
      "summary": "Add an image to a Word document.",
      "success": false,
      "status": "400",
      "response_time": 0.07,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/add/table",
      "method": "POST",
      "summary": "Add a table to a Word document.",
      "success": false,
      "status": "400",
      "response_time": 0.07,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/add/page/break",
      "method": "POST",
      "summary": "Add a page break to the document.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.07,
      "message": "✅ Success (42 chars)"
    },
    {
      "path": "/delete/paragraph",
      "method": "POST",
      "summary": "Delete a paragraph from a document.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.09,
      "message": "✅ Success (42 chars)"
    },
    {
      "path": "/search/and/replace",
      "method": "POST",
      "summary": "Search for text and replace all occurrences.",
      "success": false,
      "status": "400",
      "response_time": 0.07,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/create/custom/style",
      "method": "POST",
      "summary": "Create a custom style in the document.",
      "success": false,
      "status": "400",
      "response_time": 0.09,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/format/text",
      "method": "POST",
      "summary": "Format a specific range of text within a paragraph.",
      "success": false,
      "status": "400",
      "response_time": 0.07,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/format/table",
      "method": "POST",
      "summary": "Format a table with borders, shading, and structure.",
      "success": false,
      "status": "400",
      "response_time": 0.07,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/set/table/cell/shading",
      "method": "POST",
      "summary": "Apply shading/filling to a specific table cell.",
      "success": false,
      "status": "400",
      "response_time": 0.08,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/apply/table/alternating/rows",
      "method": "POST",
      "summary": "Apply alternating row colors to a table for better readability.",
      "success": false,
      "status": "400",
      "response_time": 0.08,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/highlight/table/header",
      "method": "POST",
      "summary": "Apply special highlighting to table header row.",
      "success": false,
      "status": "400",
      "response_time": 0.08,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/merge/table/cells",
      "method": "POST",
      "summary": "Merge cells in a rectangular area of a table.",
      "success": false,
      "status": "400",
      "response_time": 0.07,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/merge/table/cells/horizontal",
      "method": "POST",
      "summary": "Merge cells horizontally in a single row.",
      "success": false,
      "status": "400",
      "response_time": 0.07,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/merge/table/cells/vertical",
      "method": "POST",
      "summary": "Merge cells vertically in a single column.",
      "success": false,
      "status": "400",
      "response_time": 0.07,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/set/table/cell/alignment",
      "method": "POST",
      "summary": "Set text alignment for a specific table cell.",
      "success": false,
      "status": "400",
      "response_time": 0.07,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/set/table/alignment/all",
      "method": "POST",
      "summary": "Set text alignment for all cells in a table.",
      "success": false,
      "status": "400",
      "response_time": 0.11,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/protect/document",
      "method": "POST",
      "summary": "Add password protection to a Word document.",
      "success": false,
      "status": "400",
      "response_time": 0.07,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/unprotect/document",
      "method": "POST",
      "summary": "Remove password protection from a Word document.",
      "success": false,
      "status": "400",
      "response_time": 0.08,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/add/footnote/to/document",
      "method": "POST",
      "summary": "Add a footnote to a specific paragraph in a Word document.",
      "success": false,
      "status": "400",
      "response_time": 0.08,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/add/footnote/after/text",
      "method": "POST",
      "summary": "Add a footnote after specific text with proper superscript formatting.",
      "success": false,
      "status": "400",
      "response_time": 0.07,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/add/footnote/before/text",
      "method": "POST",
      "summary": "Add a footnote before specific text with proper superscript formatting.",
      "success": false,
      "status": "400",
      "response_time": 0.07,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/add/footnote/enhanced",
      "method": "POST",
      "summary": "Enhanced footnote addition with guaranteed superscript formatting.",
      "success": false,
      "status": "400",
      "response_time": 0.08,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/add/endnote/to/document",
      "method": "POST",
      "summary": "Add an endnote to a specific paragraph in a Word document.",
      "success": false,
      "status": "400",
      "response_time": 0.07,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/customize/footnote/style",
      "method": "POST",
      "summary": "Customize footnote numbering and formatting in a Word document.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.07,
      "message": "✅ Success (42 chars)"
    },
    {
      "path": "/delete/footnote/from/document",
      "method": "POST",
      "summary": "Delete a footnote from a Word document.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.08,
      "message": "✅ Success (42 chars)"
    },
    {
      "path": "/add/footnote/robust",
      "method": "POST",
      "summary": "Add footnote with robust validation and Word compliance.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.08,
      "message": "✅ Success (67 chars)"
    },
    {
      "path": "/validate/document/footnotes",
      "method": "GET",
      "summary": "Validate all footnotes in document for coherence and compliance.",
      "success": false,
      "status": "500",
      "response_time": 0.08,
      "message": "❌ {\"detail\":\"400: Function validate_document_footnotes requires parameters. Use POST instead.\"}"
    },
    {
      "path": "/delete/footnote/robust",
      "method": "POST",
      "summary": "Delete footnote with comprehensive cleanup and orphan removal.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.08,
      "message": "✅ Success (63 chars)"
    },
    {
      "path": "/get/paragraph/text/from/document",
      "method": "POST",
      "summary": "Get text from a specific paragraph in a Word document.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.08,
      "message": "✅ Success (42 chars)"
    },
    {
      "path": "/find/text/in/document",
      "method": "POST",
      "summary": "Find occurrences of specific text in a Word document.",
      "success": false,
      "status": "400",
      "response_time": 0.07,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/convert/to/pdf",
      "method": "POST",
      "summary": "Convert a Word document to PDF format.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.08,
      "message": "✅ Success (42 chars)"
    },
    {
      "path": "/replace/paragraph/block/below/header",
      "method": "POST",
      "summary": "Replace paragraph block below header",
      "success": false,
      "status": "400",
      "response_time": 0.07,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/replace/block/between/manual/anchors",
      "method": "POST",
      "summary": "Replace all content between start_anchor_text and end_anchor_text (or next logical header if not provided).",
      "success": false,
      "status": "400",
      "response_time": 0.07,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/get/all/comments",
      "method": "POST",
      "summary": "Extract all comments from a Word document.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.07,
      "message": "✅ Success (79 chars)"
    },
    {
      "path": "/get/comments/by/author",
      "method": "POST",
      "summary": "Extract comments from a specific author in a Word document.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.09,
      "message": "✅ Success (79 chars)"
    },
    {
      "path": "/get/comments/for/paragraph",
      "method": "POST",
      "summary": "Extract comments for a specific paragraph in a Word document.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.08,
      "message": "✅ Success (79 chars)"
    },
    {
      "path": "/set/table/column/width",
      "method": "POST",
      "summary": "Set the width of a specific table column.",
      "success": false,
      "status": "400",
      "response_time": 0.07,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/set/table/column/widths",
      "method": "POST",
      "summary": "Set the widths of multiple table columns.",
      "success": false,
      "status": "400",
      "response_time": 0.08,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/set/table/width",
      "method": "POST",
      "summary": "Set the overall width of a table.",
      "success": false,
      "status": "400",
      "response_time": 0.08,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/auto/fit/table/columns",
      "method": "POST",
      "summary": "Set table columns to auto-fit based on content.",
      "success": false,
      "status": "400",
      "response_time": 0.09,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/format/table/cell/text",
      "method": "POST",
      "summary": "Format text within a specific table cell.",
      "success": false,
      "status": "400",
      "response_time": 0.07,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/set/table/cell/padding",
      "method": "POST",
      "summary": "Set padding/margins for a specific table cell.",
      "success": false,
      "status": "400",
      "response_time": 0.08,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/list/document/templates",
      "method": "GET",
      "summary": "List all available document templates, optionally filtered by category.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.17,
      "message": "✅ Success (2237 chars)"
    },
    {
      "path": "/add/document/template",
      "method": "POST",
      "summary": "Add a document as a template to the template library.",
      "success": false,
      "status": "400",
      "response_time": 0.08,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/create/document/from/template",
      "method": "POST",
      "summary": "Create a new document from an existing template with optional variable substitution.",
      "success": false,
      "status": "400",
      "response_time": 0.08,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/get/template/info",
      "method": "POST",
      "summary": "Get detailed information about a specific template.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.11,
      "message": "✅ Success (405 chars)"
    },
    {
      "path": "/delete/document/template",
      "method": "POST",
      "summary": "Delete a template from the template library.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.09,
      "message": "✅ Success (49 chars)"
    },
    {
      "path": "/replace/text/universal",
      "method": "POST",
      "summary": "Universal text replacement that works everywhere in the document.",
      "success": false,
      "status": "400",
      "response_time": 0.07,
      "message": "❌ Bad Request (invalid params)"
    },
    {
      "path": "/list/content/controls",
      "method": "POST",
      "summary": "List all ContentControls (structured fields) in the document.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.08,
      "message": "✅ Success (75 chars)"
    },
    {
      "path": "/list/all/documents",
      "method": "GET",
      "summary": "List ALL Word documents in storage. No parameters needed.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.14,
      "message": "✅ Success (2613 chars)"
    },
    {
      "path": "/list/all/templates",
      "method": "GET",
      "summary": "List ALL available templates. No parameters needed. Shows all templates in all categories.",
      "success": true,
      "status": "200 OK",
      "response_time": 0.14,
      "message": "✅ Success (1800 chars)"
    }
  ]
}